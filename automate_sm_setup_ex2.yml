---
- name: smart management setup - quickstart ex1
  hosts: localhost
  gather_facts: no
  collections:
    - ansible.controller
  
  environment:
    #CONTROLLER_HOST: "{{ controller }}"
    #CONTROLLER_USERNAME: "{{ user }}"
    #CONTROLLER_PASSWORD: "{{ pass }}"
    #CONTROLLER_VERIFY_SSL: False

  tasks:

    - name: Create SATELLITE / Patching Workflow 
      ansible.controller.workflow_job_template:
        name: "SATELLITE / Patching Workflow"
        inventory: Demo Inventory
        #extra_vars: {'foo': 'bar', 'another-foo': {'barz': 'bar2'}}
        workflow_nodes:
        - identifier: Inventory Source Sync 
          unified_job_template:
            name: EC2 Dynamic Source - RHEL7 Development
            inventory:
              organization:
                name: Default
            type: inventory_source
          related:
            success_nodes: 
              - identifier: SERVER / RHEL7 - Fact Scan 
            failure_nodes: []
            always_nodes: []
            credentials: []

        - identifier: SERVER / RHEL7 - Fact Scan
          unified_job_template:
            organization:
              name: Default
            name: SERVER / RHEL7 - Fact Scan
            type: job_template
          related:
            success_nodes: 
              - identifier: SERVER / RHEL7 - Patch
            failure_nodes: []
            always_nodes: []
            credentials: []


        - identifier: SATELLITE / RHEL - Publish Content View
          unified_job_template:
            organization:
              name: Default
            name: SATELLITE / RHEL - Publish Content View
            type: job_template
            vars: {'content_view': 'RHEL7'}
          credentials: []
          related:
            success_nodes:
              - identifier: SATELLITE / RHEL - Promote Content View Job Template
            failure_nodes: []
            always_nodes: []
            credentials: []

        - identifier: SATELLITE / RHEL - Promote Content View Job Template
          unified_job_template:
            organization:
              name: Default
            name: SATELLITE / RHEL - Promote Content View
            type: job_template
            vars: 
              content_view: RHEL7
              current_lifecycle_environment: RHEL7_Dev
              lifecycle_environment: RHEL7_QA
          credentials: []
          related:
            success_nodes:
              - identifier: SERVER / RHEL7 - Patch
            failure_nodes: []
            always_nodes: []
            credentials: []


        - identifier: SERVER / RHEL7 - Patch
          unified_job_template:
            organization:
              name: Default
            name: SERVER / RHEL7 - Patch
            type: job_template
            vars:
              lifecycle_stage: RHEL7_Dev
              check_only: 'no'
          credentials: []
          related:
            success_nodes:
              - identifier: 
            failure_nodes: []
            always_nodes: []
            credentials: []

      register: job

    - name: debug
      ansible.builtin.debug:
        var: job
        verbosity: 2

    - name: Wait for job SATELLITE / Patching Workflow Template
      ansible.builtin.pause:
        minutes: 1
      when: job.changed

    - name: Launch Job - SATELLITE / Patching Workflow
      ansible.controller.job_launch:
        name: "SATELLITE / Patching Workflow"
      register: job

    - name: Wait for job SATELLITE / Patching Workflow
      ansible.controller.job_wait:
        job_id: "{{ job.id }}"
        timeout: 800
